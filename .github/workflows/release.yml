name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., 1.0.0)'
        required: true
      prerelease:
        description: 'Prerelease tag (alpha, beta, rc)'
        required: false

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test
        continue-on-error: true

      - name: Build
        run: npm run build

      - name: Create package
        run: npm pack

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: |
            Changes in this Release:
            - See [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md)

            ## Installation
            ```bash
            npm install -g zodkit@${{ github.ref_name }}
            ```
          draft: false
          prerelease: ${{ contains(github.ref_name, 'beta') || contains(github.ref_name, 'alpha') || contains(github.ref_name, 'rc') }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./zodkit-*.tgz
          asset_name: zodkit-${{ github.ref_name }}.tgz
          asset_content_type: application/gzip

      - name: Publish to NPM
        run: |
          if [[ "${{ github.ref_name }}" == *"beta"* ]]; then
            npm publish --tag beta
          elif [[ "${{ github.ref_name }}" == *"alpha"* ]]; then
            npm publish --tag alpha
          elif [[ "${{ github.ref_name }}" == *"rc"* ]]; then
            npm publish --tag rc
          else
            npm publish
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        continue-on-error: true # Allow NPM publish to fail for now